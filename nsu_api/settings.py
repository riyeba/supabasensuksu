"""
Django settings for nsu_api project.

Generated by 'django-admin startproject' using Django 3.2.24.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
STATIC_URL = 'static/'

# STATICFILES_DIRS=[BASE_DIR/'static']
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
# STATICFILES_DIRS=(os.path.join(BASE_DIR,'static'),)
STATIC_ROOT=os.path.join(BASE_DIR,'staticfiles_build','static')


MEDIA_ROOT =  os.path.join(BASE_DIR,'media')
MEDIA_URL = '/media/'
STATIC_ROOT = BASE_DIR/'assets'






# Build paths inside the project like this: BASE_DIR / 'subdir'.
# STATIC_URL = 'static/'







# SECURITY WARNING: don't run with debug turned on in production!
#

# Following settings only make sense on production and may break development environments.
# STATIC_URL = 'static/'
# import mimetypes
# mimetypes.add_type("text/css", ".css", True)
# STATICFILES_DIRS=[
    
#    BASE_DIR.joinpath('nsufrontend/dist')
# ]

# MEDIA_ROOT =  os.path.join(BASE_DIR,'media')
# MEDIA_URL = '/media/'
# STATIC_ROOT = BASE_DIR/'assets'

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-av!dk1xw_w)w)*2fbki1x7i1f4o30wd=8e7*r(h=jh4!)(4p2t'

SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'your_default_secret_key_here')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [ '.vercel.app','localhost',".build_files.sh"]






# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'nsuapp',
    'rest_framework',
     "corsheaders",
    'django.contrib.staticfiles',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
     "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]



ROOT_URLCONF = 'nsu_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'nsu_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }



from urllib.parse import urlparse



DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgress',  
        'USER': "postgres.mswvncfgajxctjoscago",
        'PASSWORD': "Adebowale123@",
        'HOST': "aws-0-eu-central-1.pooler.supabase.com",
        'PORT': 5432,
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CORS_ORIGIN_ALLOW_ALL = True 


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # SMTP server host
EMAIL_PORT = 587  # SMTP server port (587 for TLS, 465 for SSL)
EMAIL_USE_TLS = True  # True for TLS, False for SSL
EMAIL_HOST_USER = 'nsuksu92@gmail.com'  # SMTP server username
EMAIL_HOST_PASSWORD = 'nnoqmllamzoqvpsl'  # SMTP server password
EMAIL_USE_SSL = False  # Set to True if using SSL
# DEFAULT_FROM_EMAIL = 'taakinpennu@gmail.com'  # Default sender email address






# import os

# from django.core.wsgi import get_wsgi_application

# os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nsuapp.settings')

# application = get_wsgi_application()